---
- name: Set kubeadm_join_worker_retry_count count
  ansible.builtin.set_fact:
    kubeadm_join_worker_retry_count: "{{ 1 if kubeadm_join_worker_retry_count is undefined else kubeadm_join_worker_retry_count|int + 1 }}"

# Determine if kubeadm did run on this node and it was a success
- name: Check for the presence of /etc/kubernetes/kubelet.conf {{ ansible_hostname }}
  ansible.builtin.stat:
    path: /etc/kubernetes/kubelet.conf
  register: admin_conf
  ignore_errors: true

- name: Verify the kubelet service status {{ ansible_hostname }}
  ansible.builtin.systemd:
    name: kubelet
    state: started
    enabled: yes
  register: kubelet_status
  ignore_errors: true

- name: Kubectl check the node status {{ ansible_hostname }}
  ansible.builtin.command: kubectl get node {{ ansible_hostname }}
  register: kubectl_node_status
  failed_when: kubectl_node_status.rc != 0 and admin_conf.stat.exists
  when: admin_conf.stat.exists
  ignore_errors: true

- name: Determine if kubeadm did run successfully on {{ ansible_hostname }}
  ansible.builtin.set_fact:
    kubeadm_ran_successfully: "{{ admin_conf.stat.exists and kubelet_status is succeeded and kubectl_node_status.rc == 0 }}"

- name: Kubeadm already ran, set kubeadm_join_worker_retry_count to max value to exit loop
  when:
    - kubeadm_ran_successfully
  ansible.builtin.set_fact:
    kubeadm_join_worker_retry_count: "{{ kubeadmin_join_no_of_retries|int + 1 }}"
# End Determine if kubeadm did run on this node and it was a success

- name: DEBUG - print kubeadm complete join command on work nodes
  ansible.builtin.debug:
    msg: "{{ hostvars[groups['k8s_controlplanes'][0]]['kubernetes_join_command'].stdout }} \
            --cri-socket unix:///var/run/crio/crio.sock \
            --certificate-key {{ hostvars[groups['k8s_controlplanes'][0]]['kubernetes_uploadcert_command'].stdout_lines[-1] | trim }} \
            --node-name \"{{ ansible_hostname }}\" "

- name: Run kubeadm join command on worker nodes kubeadm_join_worker_retry_count {{ kubeadm_join_worker_retry_count }} kubeadmin_join_no_of_retries {{ kubeadmin_join_no_of_retries }}
  ansible.builtin.command: "{{ hostvars[groups['k8s_controlplanes'][0]]['kubernetes_join_command'].stdout }} \
            --cri-socket unix:///var/run/crio/crio.sock \
            --certificate-key {{ hostvars[groups['k8s_controlplanes'][0]]['kubernetes_uploadcert_command'].stdout_lines[-1] | trim }} \
            --node-name \"{{ ansible_hostname }}\" "
  register: kubeadm_join_worker_result
  when:
    - kubeadm_join_worker_retry_count|int <= kubeadmin_join_no_of_retries|int
  ignore_errors: true

- name: kubeadm join error, running kubeadm reset
  ansible.builtin.command: kubeadm reset -f
  when: 
    - kubeadm_join_worker_result is failed
    - kubeadm_join_worker_retry_count|int < kubeadmin_join_no_of_retries|int

- name: "kubeadm join worker error, pause {{ kubeadmin_join_delay_between_retries|int }} seconds"
  ansible.builtin.pause: 
    seconds: "{{ kubeadmin_join_delay_between_retries|int }}"
  when: 
    - kubeadm_join_worker_result is failed
    - kubeadm_join_worker_retry_count|int < kubeadmin_join_no_of_retries|int

- name: Trying again to run kubeadm join
  ansible.builtin.include_tasks: kubeadm_join_nodes_k8s_workers_commands.yml
  when: 
    - kubeadm_join_worker_result is failed
    - kubeadm_join_worker_retry_count|int < kubeadmin_join_no_of_retries|int

- name: SUCCESS for kubeadm join worker, copy kubectl config for root
  when:
    - kubeadm_join_worker_result is success
    - kubeadm_join_worker_retry_count|int < kubeadmin_join_no_of_retries|int
  block:
    - name: Create directory /root/.kube
      ansible.builtin.file:
        path: /root/.kube
        owner: root
        group: root
        mode: u+rwx,g-rwx,o-rwx
        state: directory

    - name: Copy kubernetes auth config for root user
      ansible.builtin.copy:
        remote_src: true
        src: /etc/kubernetes/kubelet.conf
        dest: /root/.kube/config
        owner: root
        group: root
        mode: u+rw,g-rwx,o-rwx

- name: kubeadm join worker success, set kubeadm_join_worker_retry_count to max value in order to exit loop
  when: 
    - kubeadm_join_worker_result is success
    - kubeadm_join_worker_retry_count|int < kubeadmin_join_no_of_retries|int
  ansible.builtin.set_fact:
    kubeadm_join_worker_retry_count: "{{ kubeadmin_join_no_of_retries|int + 1 }}"